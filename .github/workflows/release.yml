## About: This workflow monitors for new git-tags (e.g. `v1.2.3`).
## Whenever you push a tag, it prepares a draft release.
## To finalize the release, browse into the Github UI, edit the notes, and publish.

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: 
          echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
          echo ::set-env name=ZIP_NAME::$(echo $(basename ${GITHUB_REPOSITORY})-${GITHUB_REF:11}.zip))

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Download assets
        run: composer install --prefer-dist --no-dev --optimize-autoloader
        
      - name: Build ZIP file
        run: zip "$ZIP_NAME" -r . -x '.git/*' -x '.github/*'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false

      - name: Upload PHAR
        id: upload_release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./${{ env.ZIP_NAME }}
          asset_name: ${{ env.ZIP_NAME }}
          asset_content_type: application/octet-stream
